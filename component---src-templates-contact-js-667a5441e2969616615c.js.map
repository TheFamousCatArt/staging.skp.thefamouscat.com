{"version":3,"file":"component---src-templates-contact-js-667a5441e2969616615c.js","mappings":"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","sources":["webpack://thefamouscat-artist/./src/components/Artwork/ArtworkInfo.js","webpack://thefamouscat-artist/./src/components/BannerModule/BannerModuleStyles.js","webpack://thefamouscat-artist/./src/components/BannerModule/BannerModule.js","webpack://thefamouscat-artist/./src/components/Contact/ContactStyles.js","webpack://thefamouscat-artist/./src/components/Contact/Contact.js","webpack://thefamouscat-artist/./src/templates/contact.js"],"sourcesContent":["import Button from \"../Button/Button\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { isNullOrUndefined } from \"../../constants/globals\"\n\nexport const ArtworkInfo = ({ artwork, contact }) => {\n    if (isNullOrUndefined(artwork)) {\n        return <></>\n    }\n\n    const { title, year, color, medium, height, width } = artwork\n\n    function getTitle() {\n        const TitleTag = `h${contact ? \"2\" : \"1\"}`\n        return (\n            <TitleTag>\n                {title}\n                <span style={{ color: \"var(--primary)\" }}>.</span>\n            </TitleTag>\n        )\n    }\n\n    function getType() {\n        const TypeTag = `h${contact ? \"3\" : \"2\"}`\n        return (\n            <TypeTag>\n                {color.map((c, i) => {\n                    return c.name + (i < color.length - 1 ? \" and \" : \"\")\n                })}{\" \"}\n                on {medium.name}, {year}\n            </TypeTag>\n        )\n    }\n\n    function getDimensions() {\n        return (\n            <>\n                {height} x {width} cm /&nbsp;\n                {Math.round(height / 2.54)} x {Math.round(width / 2.54)} in\n            </>\n        )\n    }\n\n    function getPricing() {\n        function isSold() {\n            return artwork.isSold() && <Button text=\"This work is already sold\" />\n        }\n\n        function contactUs() {\n            if (!contact && !artwork.isSold()) {\n                return (\n                    <Button\n                        className=\"btn\"\n                        text=\"Contact Us\"\n                        as={Link}\n                        to={\"/contact?type=artwork&slug=\" + artwork.slug}\n                    />\n                )\n            } else {\n                return <></>\n            }\n        }\n\n        return (\n            <>\n                <h3>\n                    {artwork.getPrice()} â‚¬<span style={{ color: \"var(--primary)\" }}>.</span>\n                </h3>\n                <div>\n                    {isSold()}\n                    {contactUs()}\n                </div>\n            </>\n        )\n    }\n\n    return (\n        <>\n            <div className={\"artwork-title\"}>{getTitle()}</div>\n            <div className={\"artwork-type\"}>{getType()}</div>\n            <div className={\"artwork-size artwork-details\"}>{getDimensions()}</div>\n            <div className={\"artwork-classification artwork-details\"}>This is a unique work.</div>\n            <div className={\"artwork-price\"}>\n                <div className=\"banner__btns\">{getPricing()}</div>\n            </div>\n            <div className={\"artwork-description artwork-details\"}>\n                This work includes a certificate of authenticity.\n            </div>\n        </>\n    )\n}\n","import styled from \"styled-components\"\n\nexport const BannerModuleStyles = styled.section`\n    height: 100vh;\n    position: relative;\n    padding: 30px var(--borderSpacing);\n\n    .artwork-size {\n        font-style: italic;\n    }\n\n    .artwork-classification {\n        font-weight: bold;\n        margin-bottom: 12px;\n    }\n\n    .container {\n        height: 100%;\n        display: flex;\n        align-items: flex-end;\n        justify-content: flex-start;\n    }\n\n    .gradient,\n    .banner__image {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: 1;\n    }\n\n    .gradient {\n        background: radial-gradient(at bottom left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n    }\n\n    .banner__content {\n        margin-top: 100px;\n        position: relative;\n        z-index: 2;\n        min-height: 33vh;\n        width: 100%;\n        color: var(--primaryFontColorNegative);\n\n        h1,\n        h2 {\n            text-shadow: var(--textShadow);\n        }\n\n        h1 {\n            border-bottom: 2px solid rgba(255, 255, 255, 0.15);\n            display: inline-block;\n        }\n\n        h2 {\n            font-size: var(--h4);\n            font-weight: 400;\n        }\n\n        h3 {\n            font-size: var(--h6);\n            font-weight: 100;\n        }\n\n        h1,\n        .price {\n            margin-top: 0;\n            font-size: var(--bannerTitle);\n        }\n    }\n\n    .banner__btns {\n        display: flex;\n        gap: var(--gap);\n\n        a,\n        img {\n            margin-top: 0.5rem;\n        }\n    }\n`\n","import * as React from \"react\"\nimport { BannerModuleStyles } from \"./BannerModuleStyles\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { Grid } from \"@mui/material\"\nimport Button from \"../Button/Button\"\nimport { navigate } from \"gatsby\"\nimport { currentArtist, isNullOrUndefined } from \"../../constants/globals\"\n\nconst BannerModule = ({ children, title, subTitle, learnMoreTitle, learnMoreTarget, bgImage }) => {\n    function scrollToArea(target) {\n        // noinspection JSIgnoredPromiseFromCall\n        navigate(target)\n    }\n\n    let _subtitle = \"\"\n    if (!isNullOrUndefined(subTitle)) {\n        if (typeof subTitle === \"string\") _subtitle = <h2>{subTitle}</h2>\n        else _subtitle = subTitle\n    }\n\n    return (\n        <>\n            <BannerModuleStyles>\n                {bgImage ? (\n                    <GatsbyImage\n                        className=\"banner__image\"\n                        imgClassName=\"banner__image--content\"\n                        alt={title + \" - Banner\"}\n                        image={bgImage}\n                    />\n                ) : (\n                    <GatsbyImage\n                        className=\"banner__image\"\n                        imgClassName=\"banner__image--content\"\n                        alt={currentArtist().name + \" - Banner\"}\n                        image={currentArtist().metadata.image.bgImage}\n                    />\n                )}\n\n                <div className=\"container\">\n                    <div className=\"banner__content\">\n                        <Grid container spacing={8}>\n                            <Grid item xl={6} lg={6} md={6} sm={12} xs={12}>\n                                {title && (\n                                    <h1>\n                                        {title}\n                                        <span style={{ color: \"var(--primary)\" }}>.</span>\n                                    </h1>\n                                )}\n                                {_subtitle}\n                                {learnMoreTarget && (\n                                    <div className=\"banner__btns\">\n                                        <Button\n                                            onClick={(e) => scrollToArea(learnMoreTarget)}\n                                            text={learnMoreTitle || \"Learn More\"}\n                                        />\n                                    </div>\n                                )}\n                            </Grid>\n                            <Grid item xl={6} lg={6} md={6} sm={12} xs={12}>\n                                {children && children}\n                            </Grid>\n                        </Grid>\n                    </div>\n                </div>\n                <div className=\"gradient\"></div>\n            </BannerModuleStyles>\n            <span id=\"topContent\"></span>\n        </>\n    )\n}\n\nexport default BannerModule\n","import styled from \"styled-components\"\n\nexport const ContactStyles = styled.section`\n    max-width: 750px;\n    box-sizing: content-box;\n    margin-left: auto;\n    margin-right: auto;\n\n    input {\n        height: calc(var(--gap));\n        margin-bottom: var(--gap);\n    }\n\n    input,\n    textarea {\n        margin-bottom: 8px;\n        background-color: #000;\n        color: #fff;\n        border: none;\n        outline: 2px solid rgba(255, 255, 255, 0.15);\n        border-radius: 6px;\n        width: 100%;\n        font-size: var(--p);\n        font-weight: 100;\n        font-family: \"Heebo\", sans-serif;\n        padding: 4px 8px;\n        transition: outline 0.3s ease;\n\n        &:focus {\n            outline: 2px solid var(--primary);\n        }\n\n        &::-webkit-input-placeholder {\n            color: var(--inActive);\n        }\n\n        &::-moz-placeholder {\n            color: var(--inActive);\n        }\n\n        &:-ms-input-placeholder {\n            color: var(--inActive);\n        }\n\n        &:-moz-placeholder {\n            color: var(--inActive);\n        }\n    }\n\n    textarea {\n        margin-bottom: var(--gap);\n    }\n`\n","import * as React from \"react\"\nimport Button from \"../Button/Button\"\nimport { ContactStyles } from \"./ContactStyles\"\n\nconst Contact = ({ textareaTemplate }) => {\n\n    function sendForm(e) {\n        console.log(e)\n        return false\n    }\n\n    return (\n        <ContactStyles>\n            <form name=\"contact\" onSubmit={(e) => sendForm(e)}>\n                <input placeholder=\"Your name...\" type=\"text\" name=\"name\" />\n                <input placeholder=\"Your email...\" type=\"email\" name=\"email\" />\n                <textarea placeholder=\"Your message...\" name=\"message\" rows=\"5\">\n                    {textareaTemplate || \"\"}\n                </textarea>\n                <Button text=\"Send Message\" />\n            </form>\n        </ContactStyles>\n    )\n}\n\nexport default Contact\n","import * as React from \"react\"\nimport Layout from \"../components/Layout\"\nimport Contact from \"../components/Contact/Contact\"\nimport Seo from \"../components/SEO\"\nimport { getQueryParameter } from \"../constants/globals\"\nimport { Artist } from \"../models/artist\"\nimport BannerModule from \"../components/BannerModule/BannerModule\"\nimport { getImage } from \"gatsby-plugin-image\"\nimport { ArtworkInfo } from \"../components/Artwork/ArtworkInfo\"\n\nconst contact = ({ pageContext: { artist: cfArtist } }) => {\n    const artist = Artist.registerFromContentful(cfArtist)\n    let contactType = getQueryParameter(\"type\")\n    let contactSlug = getQueryParameter(\"slug\")\n    let artwork = null\n    let bgImage = null\n    if (contactType === \"artwork\") {\n        artwork = artist.artworkBySlug(contactSlug)\n        bgImage = getImage(artwork.gatsbyImage)\n    }\n    return (\n        <>\n            <Seo title=\"Contact Us\" artist={artist} />\n            <Layout>\n                <BannerModule title=\"Contact Us\" subTitle={<ArtworkInfo artwork={artwork} contact />} bgImage={bgImage}>\n                    <Contact />\n                </BannerModule>\n            </Layout>\n        </>\n    )\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport default contact\n"],"names":["ArtworkInfo","artwork","contact","isNullOrUndefined","TypeTag","TitleTag","title","year","color","medium","height","width","className","style","map","c","i","name","length","Math","round","getPrice","isSold","text","as","Link","to","slug","BannerModuleStyles","styled","children","subTitle","learnMoreTitle","learnMoreTarget","bgImage","_subtitle","G","imgClassName","alt","image","currentArtist","metadata","Grid","container","spacing","item","xl","lg","md","sm","xs","Button","onClick","e","target","navigate","id","ContactStyles","textareaTemplate","onSubmit","console","log","sendForm","placeholder","type","rows","cfArtist","pageContext","artist","Artist","contactType","getQueryParameter","contactSlug","artworkBySlug","getImage","gatsbyImage","Layout","BannerModule"],"sourceRoot":""}